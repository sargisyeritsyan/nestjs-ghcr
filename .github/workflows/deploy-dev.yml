name: CI

on:
  push:
    branches: [main]

env:
  DOCKER_FILE: ./Dockerfile
  DOCKER_CTX: .
  GH_IMAGE: ghcr.io/sargisyeritsyan/nestjs-ghcr

jobs:
  build-image:
    runs-on: ubuntu-latest
    #    needs: test

    outputs:
      image_version: ${{ steps.extract.outputs.fullSemVer }}
      branch: ${{ steps.extract.outputs.branch }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-api-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-api-

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: slapi-gh
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version and branch
        id: extract
        run: |
          SEMVER=$VERSION
          SANITIZED_VERSION="${SEMVER//+/_}"
          echo "SANITIZED_VERSION $SANITIZED_VERSION"
          echo "------------"
          echo "::set-output name=fullSemVer::$SANITIZED_VERSION"
          SANITIZED_BRANCH="${GITHUB_REF#refs/heads/}"
          GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          echo "------------"
          echo "VERSION $VERSION"
          echo "SANITIZED_VERSION $SANITIZED_VERSION"
          echo "SANITIZED_BRANCH $SANITIZED_BRANCH"
          echo "GIT_HASH $GIT_HASH"
          echo "GITHUB_REF $GITHUB_REF"
          echo "::set-output name=branch::$SANITIZED_BRANCH"
          echo "::set-output name=hash::$GIT_HASH"
        env:
          VERSION: ${{ steps.gitversion.outputs.fullSemVer }}

      - name: Log Outputs
        run: |
          echo "OUTPUT ${{ steps.extract.outputs.fullSemVer }}"
          echo "OUTPUT ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "OUTPUT ${{ steps.extract.outputs.branch }}"
          echo "OUTPUT ${{ steps.extract.outputs.hash }}"
          echo "ENV ${{ env.VERSION }}"

      - name: Build and push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.DOCKER_CTX }}
          file: ${{ env.DOCKER_FILE }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          load: false
          tags: |
            ${{ env.GH_IMAGE }}:${{ env.VERSION }}
            ${{ env.GH_IMAGE }}:${{ steps.extract.outputs.hash }}
          labels: |
            branch=${{ steps.extract.outputs.branch }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ steps.extract.outputs.hash }}
            org.opencontainers.image.version=${{ env.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          build-args: |
            BUILD_VERSION_ARG=${{ env.VERSION }}
        env:
          VERSION: ${{ steps.extract.outputs.fullSemVer }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

